import{p as e,H as s}from"./app-BArZ-JoB.js";function U(o){const c=e([]),i=e([]),u=e([]),p=e([]),d=e(null),n=e(null),l=e(null);return{populares:c,getPopulares:async()=>{try{const a=await s.get(`/api/canciones/populares/${o.value}`);c.value=a.data.data}catch(a){console.error("Error al cargar las canciones populares",a)}},albumes:i,getAlbumesUser:async()=>{try{const a=await s.get(`/api/albumes/${o.value}`);i.value=a.data.data}catch(a){console.error("Error al cargar los 치lbumes del usuario",a)}},album:d,getAlbumData:async()=>{try{const a=await s.get(`/api/album/${o.value}`);d.value=a.data.data}catch(a){console.log("Error cargando los datos del 치lbum",a)}},canciones:n,getCancionesAlbum:async()=>{try{const a=await s.get(`/api/albumes/${o.value}/canciones`);n.value=a.data.data}catch{console.log("Error al recuperar las canciones del 치lbum.")}},listas:u,getListasUser:async()=>{try{const a=await s.get(`/api/listas/${o.value}`);u.value=a.data.data}catch(a){console.log("Error al cargar las listas del usuario",a)}},listasGuardadas:p,getListasFavsUser:async()=>{try{const a=await s.get(`/api/mostrar/lista/likes/${o.value}`);p.value=a.data.data}catch(a){console.log("Error al cargar las listas favoritas del usuario",a)}},lista:l,getListaData:async a=>{try{const r=await s.get(`/api/lista/${a}`);return l.value=r.data.data,l.value}catch(r){throw console.error("Error cargando datos de la lista:",r),r}},getCancionesLista:async a=>{try{const r=await s.get(`/api/listas/${a}/canciones`);return n.value=r.data.data,n.value}catch(r){throw console.error("Error cargando canciones de la lista:",r),r}},updateLista:async(a,r)=>{try{return(await s.post(`/api/listas/update/${a}`,r)).data}catch(t){throw console.error("Error al actualizar la lista:",t),t}},updateListaImagen:async(a,r)=>{try{return(await s.post("/api/listas/updateimg",r,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(t){throw console.error("Error al actualizar la imagen de la lista:",t),t}},eliminarLista:async a=>{try{return(await s.delete(`/api/listas/del/${a}`)).data}catch(r){throw console.error("Error al eliminar la lista:",r),r}},eliminarCancionDeLista:async(a,r)=>{try{return(await s.delete(`/api/listas/${a}/cancion/${r}`)).data}catch(t){throw console.error("Error al eliminar la canci칩n de la lista:",t),t}}}}export{U as m};
